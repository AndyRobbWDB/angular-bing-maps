function drawingToolsDirective(){"use strict";function i(i,n,o,t){if("undefined"==typeof DrawingTools)return console.log("You did not include DrawingToolsModule.js. Please include this script and try again"),void 0;var e={events:{drawingEnded:function(n){i.onShapeChange({shapes:n}),i.$apply()}}};o.hasOwnProperty("withToolbar")&&(e.toolbarContainer=n[0]),i.drawingManager=new DrawingTools.DrawingManager(t.map,e),i.$watch("drawThisShape",function(n){"none"===n?i.drawingManager.setDrawingMode(null):i.drawingManager.setDrawingMode(n)})}return{link:i,restrict:"EA",scope:{onShapeChange:"&",drawThisShape:"="},require:"^bingMap"}}function geoJsonDirective(){"use strict";function i(i,n,o,t){if("undefined"==typeof GeoJSONModule)return console.log("You have not loaded the GeoJSONModule.js. Please include this script and try again"),void 0;Microsoft.Maps.loadModule("Microsoft.Maps.AdvancedShapes");var e=new GeoJSONModule,a=new Microsoft.Maps.EntityCollection;t.map.entities.push(a),i.$watch("model",function(){i.model?e.ImportGeoJSON(i.model,function(i){for(var n=i.pop();n;)a.push(n),n=i.pop()}):a.clear()})}return{link:i,restrict:"EA",scope:{model:"="},require:"^bingMap"}}function infoBoxDirective(){"use strict";function i(i,n,o,t){function e(){r.setLocation(new Microsoft.Maps.Location(i.lat,i.lng))}function a(){i.options||(i.options={}),i.title&&(i.options.title=i.title),i.description&&(i.options.description=i.description),i.options.visible=i.hasOwnProperty("visible")?i.visible:!0,r.setOptions(i.options)}var r=new Microsoft.Maps.Infobox,s=t[1];i.$on("positionUpdated",function(i,n){r.setLocation(n)}),s||(i.$watch("lat",e),i.$watch("lng",e)),i.$watch("options",a),i.$watch("title",a),i.$watch("description",a),i.$watch("visible",a),t[0].map.entities.push(r)}return{link:i,restrict:"EA",scope:{options:"=?",lat:"=?",lng:"=?",title:"=?",description:"=?",visible:"=?"},require:["^bingMap","?^pushpin"]}}function bingMapDirective(){"use strict";return{template:"<div ng-transclude></div>",restrict:"EA",transclude:!0,scope:{credentials:"=",center:"=?",zoom:"=?",mapType:"=?"},controller:function(i,n){this.map=new Microsoft.Maps.Map(n[0],{credentials:i.credentials}),i.map=this.map,i.$watch("center",function(n){i.map.setView({animate:!0,center:n})}),i.$watch("zoom",function(n){i.map.setView({animate:!0,zoom:n})}),i.$watch("mapType",function(n){i.map.setView({animate:!0,mapTypeId:n})})}}}function polygonDirective(){"use strict";function i(i,n,o,t){function e(){r=[];for(var n=0;n<i.locations.length;n++)angular.isArray(i.locations[n])?r.push(new Microsoft.Maps.Location(i.locations[n][0],i.locations[n][1])):r.push(new Microsoft.Maps.Location(i.locations[n].latitude,i.locations[n].longitude))}function a(){i.options||(i.options={}),i.fillColor&&(i.options.fillColor=Microsoft.Maps.Color.fromHex(i.fillColor)),i.strokeColor&&(i.options.strokeColor=Microsoft.Maps.Color.fromHex(i.strokeColor))}var r=[];e();var s=new Microsoft.Maps.Polygon(r);t.map.entities.push(s),i.$watch("options",function(i){s.setOptions(i)}),i.$watch("locations",function(){e(),s.setLocations(r)}),i.$watch("fillColor",a),i.$watch("strokeColor",a)}return{link:i,restrict:"EA",scope:{options:"=?",locations:"=",fillColor:"=?",strokeColor:"=?"},require:"^bingMap"}}function pushpinDirective(){"use strict";function i(i,n,o,t){function e(){i.lat&&i.lng&&(i.pin.setLocation(new Microsoft.Maps.Location(i.lat,i.lng)),i.$broadcast("positionUpdated",i.pin.getLocation()))}function a(){return!0}e(),t.map.entities.push(i.pin),i.$watch("lat",e),i.$watch("lng",e),i.$watch("options",function(n){i.pin.setOptions(n)}),Microsoft.Maps.Events.addHandler(i.pin,"dragend",function(n){var o=n.entity.getLocation();i.lat=o.latitude,i.lng=o.longitude,i.$apply()});for(var r in i.events)a(r)&&Microsoft.Maps.Events.addHandler(i.pin,r,function(n){i.events[n.eventName](),i.$apply()})}return{link:i,controller:function(i){this.pin=new Microsoft.Maps.Pushpin,i.pin=this.pin},template:"<div ng-transclude></div>",restrict:"EA",transclude:!0,scope:{options:"=?",lat:"=",lng:"=",events:"=?"},require:"^bingMap"}}function tileLayerDirective(){"use strict";function i(i,n,o,t){function e(){a=new Microsoft.Maps.TileSource({uriConstructor:i.source}),i.options?angular.extend(i.options,{mercator:a}):i.options={mercator:a},r?r.setOptions(i.options):(r=new Microsoft.Maps.TileLayer(i.options),t.map.entities.push(r))}var a,r;i.$watch("options",e),i.$watch("source",e)}return{link:i,template:"<div ng-transclude></div>",restrict:"EA",transclude:!0,scope:{options:"=?",source:"="},require:"^bingMap"}}!function(){angular.module("angularBingMaps.config",[]).value("angularBingMaps.config",{debug:!0}),angular.module("angularBingMaps.directives",[]),angular.module("angularBingMaps.filters",[]),angular.module("angularBingMaps.services",[]),angular.module("angularBingMaps",["angularBingMaps.config","angularBingMaps.directives","angularBingMaps.filters","angularBingMaps.services"])}(),angular.module("angularBingMaps.directives").directive("drawingTools",drawingToolsDirective),angular.module("angularBingMaps.directives").directive("geoJson",geoJsonDirective),angular.module("angularBingMaps.directives").directive("infoBox",infoBoxDirective),angular.module("angularBingMaps.directives").directive("bingMap",bingMapDirective),angular.module("angularBingMaps.directives").directive("polygon",polygonDirective),angular.module("angularBingMaps.directives").directive("pushpin",pushpinDirective),angular.module("angularBingMaps.directives").directive("tileLayer",tileLayerDirective);
